use crate::{cmn::*, *};

/// Base 6502 Memory layout
#[inline]
pub fn mm_6502(a: LoHi) -> usize {
    u16::from(a) as usize
}

/// 6507 Memory layout:
/// - https://www.qotile.net/minidig/docs/2600_mem_map.txt
/// - https://www.taswegian.com/WoodgrainWizard/tiki-index.php?page=Memory-Map
///
/// Refer:
/// - https://forums.atariage.com/topic/192418-mirrored-memory/#comment-2439795
/// - https://forums.atariage.com/topic/27190-session-5-memory-architecture/#comment-442653
/// - https://wilsonminesco.com/6502primer/MemMapReqs.html
pub fn mm_6507(a: LoHi) -> usize {
    // Step 0. Turn off A13-A15 pins.
    let addr = u16::from(a) as usize & 0b0001_1111_1111_1111;

    // *****************************************
    // * $1000-$1FFF = ROM Addresses $000-$FFF *
    // * ------------------------------------- *
    // *                                       *
    // *     mirror: $x000                     *
    // *     x = {odd}                         *
    // *                                       *
    // *****************************************
    if bits::tst_bits(addr, 0b0001_0000_0000_0000) {
        return addr;
    }

    // ***************************************************
    // * $0000-$003F = TIA Addresses $00-$3F (zero page) *
    // * ----------------------------------------------- *
    // *                                                 *
    // *     mirror: $xyz0                               *
    // *     x = {even}                                  *
    // *     y = {anything}                              *
    // *     z = {0, 4}                                  *
    // *                                                 *
    // ***************************************************
    if !bits::tst_bits(addr, 0b0000_0000_1000_0000) {
        return addr & 0b0000_0000_0011_1111;
    }

    // **************************************
    // * $0080-$00FF = RIOT RAM (zero page) *
    // * ---------------------------------- *
    // *                                    *
    // *     mirror: $xy80                  *
    // *     x = {even}                     *
    // *     y = {0,1,4,5,8,9,$C,$D}        *
    // *                                    *
    // **************************************
    if !bits::tst_bits(addr, 0b0000_0010_1000_0000) {
        return addr & 0b0000_0000_1111_1111;
    }

    // ****************************************
    // * $0280-$029F = RIOT Addresses $00-$1F *
    // * ------------------------------------ *
    // *                                      *
    // *     mirror: $xyz0                    *
    // *                                      *
    // *     x = {even}                       *
    // *     y = {2,3,6,7,$A,$B,$E,$F}        *
    // *     z = {8,$A,$C,$E}                 *
    // *                                      *
    // ****************************************
    addr & 0b0000_0000_0001_1111
}

#[cfg(test)]
mod tests {
    use super::*;
    use test_case::test_case;

    #[test_case((0x0000, 0x003F), (0x0000, 0x003F); "$0000-$003F = TIA Addresses $00-$3F   (zpg)   ")]
    #[test_case((0x0040, 0x007F), (0x0000, 0x003F); "$0040-$007F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0080, 0x00FF), (0x0080, 0x00FF); "$0080-$00FF = RIOT RAM $80-$FF        (zpg)   ")]
    #[test_case((0x0100, 0x013F), (0x0000, 0x003F); "$0100-$013F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0140, 0x017F), (0x0000, 0x003F); "$0140-$017F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0180, 0x01FF), (0x0080, 0x00FF); "$0180-$01FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x0200, 0x023F), (0x0000, 0x003F); "$0200-$023F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0240, 0x027F), (0x0000, 0x003F); "$0240-$027F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0280, 0x029F), (0x0000, 0x001F); "$0280-$029F = RIOT Addresses $00-$1F          ")]
    #[test_case((0x02A0, 0x02BF), (0x0000, 0x001F); "$02A0-$02BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x02C0, 0x02DF), (0x0000, 0x001F); "$02C0-$02DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x02E0, 0x02FF), (0x0000, 0x001F); "$02E0-$02FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0300, 0x033F), (0x0000, 0x003F); "$0300-$033F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0340, 0x037F), (0x0000, 0x003F); "$0340-$037F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0380, 0x039F), (0x0000, 0x001F); "$0380-$039F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x03A0, 0x03BF), (0x0000, 0x001F); "$03A0-$03BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x03C0, 0x03DF), (0x0000, 0x001F); "$03C0-$03DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x03E0, 0x03FF), (0x0000, 0x001F); "$03E0-$03FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0400, 0x043F), (0x0000, 0x003F); "$0400-$043F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0440, 0x047F), (0x0000, 0x003F); "$0440-$047F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0480, 0x04FF), (0x0080, 0x00FF); "$0480-$04FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x0500, 0x053F), (0x0000, 0x003F); "$0500-$053F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0540, 0x057F), (0x0000, 0x003F); "$0540-$057F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0580, 0x05FF), (0x0080, 0x00FF); "$0580-$05FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x0600, 0x063F), (0x0000, 0x003F); "$0600-$063F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0640, 0x067F), (0x0000, 0x003F); "$0640-$067F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0680, 0x069F), (0x0000, 0x001F); "$0680-$069F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x06A0, 0x06BF), (0x0000, 0x001F); "$06A0-$06BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x06C0, 0x06DF), (0x0000, 0x001F); "$06C0-$06DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x06E0, 0x06FF), (0x0000, 0x001F); "$06E0-$06FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0700, 0x073F), (0x0000, 0x003F); "$0700-$073F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0740, 0x077F), (0x0000, 0x003F); "$0740-$077F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0780, 0x079F), (0x0000, 0x001F); "$0780-$079F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x07A0, 0x07BF), (0x0000, 0x001F); "$07A0-$07BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x07C0, 0x07DF), (0x0000, 0x001F); "$07C0-$07DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x07E0, 0x07FF), (0x0000, 0x001F); "$07E0-$07FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0800, 0x083F), (0x0000, 0x003F); "$0800-$083F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0840, 0x087F), (0x0000, 0x003F); "$0840-$087F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0880, 0x08FF), (0x0080, 0x00FF); "$0880-$08FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x0900, 0x093F), (0x0000, 0x003F); "$0900-$093F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0940, 0x097F), (0x0000, 0x003F); "$0940-$097F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0980, 0x09FF), (0x0080, 0x00FF); "$0980-$09FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x0A00, 0x0A3F), (0x0000, 0x003F); "$0A00-$0A3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0A40, 0x0A7F), (0x0000, 0x003F); "$0A40-$0A7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0A80, 0x0A9F), (0x0000, 0x001F); "$0A80-$0A9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0AA0, 0x0ABF), (0x0000, 0x001F); "$0AA0-$0ABF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0AC0, 0x0ADF), (0x0000, 0x001F); "$0AC0-$0ADF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0AE0, 0x0AFF), (0x0000, 0x001F); "$0AE0-$0AFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0B00, 0x0B3F), (0x0000, 0x003F); "$0B00-$0B3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0B40, 0x0B7F), (0x0000, 0x003F); "$0B40-$0B7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0B80, 0x0B9F), (0x0000, 0x001F); "$0B80-$0B9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0BA0, 0x0BBF), (0x0000, 0x001F); "$0BA0-$0BBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0BC0, 0x0BDF), (0x0000, 0x001F); "$0BC0-$0BDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0BE0, 0x0BFF), (0x0000, 0x001F); "$0BE0-$0BFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0C00, 0x0C3F), (0x0000, 0x003F); "$0C00-$0C3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0C40, 0x0C7F), (0x0000, 0x003F); "$0C40-$0C7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0C80, 0x0CFF), (0x0080, 0x00FF); "$0C80-$0CFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x0D00, 0x0D3F), (0x0000, 0x003F); "$0D00-$0D3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0D40, 0x0D7F), (0x0000, 0x003F); "$0D40-$0D7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0D80, 0x0DFF), (0x0080, 0x00FF); "$0D80-$0DFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x0E00, 0x0E3F), (0x0000, 0x003F); "$0E00-$0E3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0E40, 0x0E7F), (0x0000, 0x003F); "$0E40-$0E7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0E80, 0x0E9F), (0x0000, 0x001F); "$0E80-$0E9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0EA0, 0x0EBF), (0x0000, 0x001F); "$0EA0-$0EBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0EC0, 0x0EDF), (0x0000, 0x001F); "$0EC0-$0EDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0EE0, 0x0EFF), (0x0000, 0x001F); "$0EE0-$0EFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0F00, 0x0F3F), (0x0000, 0x003F); "$0F00-$0F3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0F40, 0x0F7F), (0x0000, 0x003F); "$0F40-$0F7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x0F80, 0x0F9F), (0x0000, 0x001F); "$0F80-$0F9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0FA0, 0x0FBF), (0x0000, 0x001F); "$0FA0-$0FBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0FC0, 0x0FDF), (0x0000, 0x001F); "$0FC0-$0FDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x0FE0, 0x0FFF), (0x0000, 0x001F); "$0FE0-$0FFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x1000, 0x1FFF), (0x1000, 0x1FFF); "$1000-$1FFF = ROM Addresses $000-$FFF         ")]
    #[test_case((0x2000, 0x203F), (0x0000, 0x003F); "$2000-$203F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2040, 0x207F), (0x0000, 0x003F); "$2040-$207F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2080, 0x20FF), (0x0080, 0x00FF); "$2080-$20FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x2100, 0x213F), (0x0000, 0x003F); "$2100-$213F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2140, 0x217F), (0x0000, 0x003F); "$2140-$217F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2180, 0x21FF), (0x0080, 0x00FF); "$2180-$21FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x2200, 0x223F), (0x0000, 0x003F); "$2200-$223F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2240, 0x227F), (0x0000, 0x003F); "$2240-$227F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2280, 0x229F), (0x0000, 0x001F); "$2280-$229F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x22A0, 0x22BF), (0x0000, 0x001F); "$22A0-$22BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x22C0, 0x22DF), (0x0000, 0x001F); "$22C0-$22DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x22E0, 0x22FF), (0x0000, 0x001F); "$22E0-$22FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2300, 0x233F), (0x0000, 0x003F); "$2300-$233F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2340, 0x237F), (0x0000, 0x003F); "$2340-$237F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2380, 0x239F), (0x0000, 0x001F); "$2380-$239F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x23A0, 0x23BF), (0x0000, 0x001F); "$23A0-$23BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x23C0, 0x23DF), (0x0000, 0x001F); "$23C0-$23DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x23E0, 0x23FF), (0x0000, 0x001F); "$23E0-$23FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2400, 0x243F), (0x0000, 0x003F); "$2400-$243F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2440, 0x247F), (0x0000, 0x003F); "$2440-$247F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2480, 0x24FF), (0x0080, 0x00FF); "$2480-$24FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x2500, 0x253F), (0x0000, 0x003F); "$2500-$253F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2540, 0x257F), (0x0000, 0x003F); "$2540-$257F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2580, 0x25FF), (0x0080, 0x00FF); "$2580-$25FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x2600, 0x263F), (0x0000, 0x003F); "$2600-$263F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2640, 0x267F), (0x0000, 0x003F); "$2640-$267F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2680, 0x269F), (0x0000, 0x001F); "$2680-$269F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x26A0, 0x26BF), (0x0000, 0x001F); "$26A0-$26BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x26C0, 0x26DF), (0x0000, 0x001F); "$26C0-$26DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x26E0, 0x26FF), (0x0000, 0x001F); "$26E0-$26FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2700, 0x273F), (0x0000, 0x003F); "$2700-$273F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2740, 0x277F), (0x0000, 0x003F); "$2740-$277F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2780, 0x279F), (0x0000, 0x001F); "$2780-$279F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x27A0, 0x27BF), (0x0000, 0x001F); "$27A0-$27BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x27C0, 0x27DF), (0x0000, 0x001F); "$27C0-$27DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x27E0, 0x27FF), (0x0000, 0x001F); "$27E0-$27FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2800, 0x283F), (0x0000, 0x003F); "$2800-$283F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2840, 0x287F), (0x0000, 0x003F); "$2840-$287F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2880, 0x28FF), (0x0080, 0x00FF); "$2880-$28FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x2900, 0x293F), (0x0000, 0x003F); "$2900-$293F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2940, 0x297F), (0x0000, 0x003F); "$2940-$297F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2980, 0x29FF), (0x0080, 0x00FF); "$2980-$29FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x2A00, 0x2A3F), (0x0000, 0x003F); "$2A00-$2A3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2A40, 0x2A7F), (0x0000, 0x003F); "$2A40-$2A7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2A80, 0x2A9F), (0x0000, 0x001F); "$2A80-$2A9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2AA0, 0x2ABF), (0x0000, 0x001F); "$2AA0-$2ABF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2AC0, 0x2ADF), (0x0000, 0x001F); "$2AC0-$2ADF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2AE0, 0x2AFF), (0x0000, 0x001F); "$2AE0-$2AFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2B00, 0x2B3F), (0x0000, 0x003F); "$2B00-$2B3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2B40, 0x2B7F), (0x0000, 0x003F); "$2B40-$2B7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2B80, 0x2B9F), (0x0000, 0x001F); "$2B80-$2B9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2BA0, 0x2BBF), (0x0000, 0x001F); "$2BA0-$2BBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2BC0, 0x2BDF), (0x0000, 0x001F); "$2BC0-$2BDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2BE0, 0x2BFF), (0x0000, 0x001F); "$2BE0-$2BFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2C00, 0x2C3F), (0x0000, 0x003F); "$2C00-$2C3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2C40, 0x2C7F), (0x0000, 0x003F); "$2C40-$2C7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2C80, 0x2CFF), (0x0080, 0x00FF); "$2C80-$2CFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x2D00, 0x2D3F), (0x0000, 0x003F); "$2D00-$2D3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2D40, 0x2D7F), (0x0000, 0x003F); "$2D40-$2D7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2D80, 0x2DFF), (0x0080, 0x00FF); "$2D80-$2DFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x2E00, 0x2E3F), (0x0000, 0x003F); "$2E00-$2E3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2E40, 0x2E7F), (0x0000, 0x003F); "$2E40-$2E7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2E80, 0x2E9F), (0x0000, 0x001F); "$2E80-$2E9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2EA0, 0x2EBF), (0x0000, 0x001F); "$2EA0-$2EBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2EC0, 0x2EDF), (0x0000, 0x001F); "$2EC0-$2EDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2EE0, 0x2EFF), (0x0000, 0x001F); "$2EE0-$2EFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2F00, 0x2F3F), (0x0000, 0x003F); "$2F00-$2F3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2F40, 0x2F7F), (0x0000, 0x003F); "$2F40-$2F7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x2F80, 0x2F9F), (0x0000, 0x001F); "$2F80-$2F9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2FA0, 0x2FBF), (0x0000, 0x001F); "$2FA0-$2FBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2FC0, 0x2FDF), (0x0000, 0x001F); "$2FC0-$2FDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x2FE0, 0x2FFF), (0x0000, 0x001F); "$2FE0-$2FFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x3000, 0x3FFF), (0x1000, 0x1FFF); "$3000-$3FFF = ROM Addresses $000-$FFF (mirror)")]
    #[test_case((0x4000, 0x403F), (0x0000, 0x003F); "$4000-$403F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4040, 0x407F), (0x0000, 0x003F); "$4040-$407F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4080, 0x40FF), (0x0080, 0x00FF); "$4080-$40FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x4100, 0x413F), (0x0000, 0x003F); "$4100-$413F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4140, 0x417F), (0x0000, 0x003F); "$4140-$417F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4180, 0x41FF), (0x0080, 0x00FF); "$4180-$41FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x4200, 0x423F), (0x0000, 0x003F); "$4200-$423F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4240, 0x427F), (0x0000, 0x003F); "$4240-$427F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4280, 0x429F), (0x0000, 0x001F); "$4280-$429F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x42A0, 0x42BF), (0x0000, 0x001F); "$42A0-$42BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x42C0, 0x42DF), (0x0000, 0x001F); "$42C0-$42DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x42E0, 0x42FF), (0x0000, 0x001F); "$42E0-$42FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4300, 0x433F), (0x0000, 0x003F); "$4300-$433F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4340, 0x437F), (0x0000, 0x003F); "$4340-$437F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4380, 0x439F), (0x0000, 0x001F); "$4380-$439F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x43A0, 0x43BF), (0x0000, 0x001F); "$43A0-$43BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x43C0, 0x43DF), (0x0000, 0x001F); "$43C0-$43DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x43E0, 0x43FF), (0x0000, 0x001F); "$43E0-$43FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4400, 0x443F), (0x0000, 0x003F); "$4400-$443F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4440, 0x447F), (0x0000, 0x003F); "$4440-$447F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4480, 0x44FF), (0x0080, 0x00FF); "$4480-$44FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x4500, 0x453F), (0x0000, 0x003F); "$4500-$453F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4540, 0x457F), (0x0000, 0x003F); "$4540-$457F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4580, 0x45FF), (0x0080, 0x00FF); "$4580-$45FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x4600, 0x463F), (0x0000, 0x003F); "$4600-$463F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4640, 0x467F), (0x0000, 0x003F); "$4640-$467F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4680, 0x469F), (0x0000, 0x001F); "$4680-$469F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x46A0, 0x46BF), (0x0000, 0x001F); "$46A0-$46BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x46C0, 0x46DF), (0x0000, 0x001F); "$46C0-$46DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x46E0, 0x46FF), (0x0000, 0x001F); "$46E0-$46FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4700, 0x473F), (0x0000, 0x003F); "$4700-$473F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4740, 0x477F), (0x0000, 0x003F); "$4740-$477F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4780, 0x479F), (0x0000, 0x001F); "$4780-$479F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x47A0, 0x47BF), (0x0000, 0x001F); "$47A0-$47BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x47C0, 0x47DF), (0x0000, 0x001F); "$47C0-$47DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x47E0, 0x47FF), (0x0000, 0x001F); "$47E0-$47FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4800, 0x483F), (0x0000, 0x003F); "$4800-$483F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4840, 0x487F), (0x0000, 0x003F); "$4840-$487F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4880, 0x48FF), (0x0080, 0x00FF); "$4880-$48FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x4900, 0x493F), (0x0000, 0x003F); "$4900-$493F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4940, 0x497F), (0x0000, 0x003F); "$4940-$497F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4980, 0x49FF), (0x0080, 0x00FF); "$4980-$49FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x4A00, 0x4A3F), (0x0000, 0x003F); "$4A00-$4A3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4A40, 0x4A7F), (0x0000, 0x003F); "$4A40-$4A7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4A80, 0x4A9F), (0x0000, 0x001F); "$4A80-$4A9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4AA0, 0x4ABF), (0x0000, 0x001F); "$4AA0-$4ABF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4AC0, 0x4ADF), (0x0000, 0x001F); "$4AC0-$4ADF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4AE0, 0x4AFF), (0x0000, 0x001F); "$4AE0-$4AFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4B00, 0x4B3F), (0x0000, 0x003F); "$4B00-$4B3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4B40, 0x4B7F), (0x0000, 0x003F); "$4B40-$4B7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4B80, 0x4B9F), (0x0000, 0x001F); "$4B80-$4B9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4BA0, 0x4BBF), (0x0000, 0x001F); "$4BA0-$4BBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4BC0, 0x4BDF), (0x0000, 0x001F); "$4BC0-$4BDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4BE0, 0x4BFF), (0x0000, 0x001F); "$4BE0-$4BFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4C00, 0x4C3F), (0x0000, 0x003F); "$4C00-$4C3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4C40, 0x4C7F), (0x0000, 0x003F); "$4C40-$4C7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4C80, 0x4CFF), (0x0080, 0x00FF); "$4C80-$4CFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x4D00, 0x4D3F), (0x0000, 0x003F); "$4D00-$4D3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4D40, 0x4D7F), (0x0000, 0x003F); "$4D40-$4D7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4D80, 0x4DFF), (0x0080, 0x00FF); "$4D80-$4DFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x4E00, 0x4E3F), (0x0000, 0x003F); "$4E00-$4E3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4E40, 0x4E7F), (0x0000, 0x003F); "$4E40-$4E7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4E80, 0x4E9F), (0x0000, 0x001F); "$4E80-$4E9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4EA0, 0x4EBF), (0x0000, 0x001F); "$4EA0-$4EBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4EC0, 0x4EDF), (0x0000, 0x001F); "$4EC0-$4EDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4EE0, 0x4EFF), (0x0000, 0x001F); "$4EE0-$4EFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4F00, 0x4F3F), (0x0000, 0x003F); "$4F00-$4F3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4F40, 0x4F7F), (0x0000, 0x003F); "$4F40-$4F7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x4F80, 0x4F9F), (0x0000, 0x001F); "$4F80-$4F9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4FA0, 0x4FBF), (0x0000, 0x001F); "$4FA0-$4FBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4FC0, 0x4FDF), (0x0000, 0x001F); "$4FC0-$4FDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x4FE0, 0x4FFF), (0x0000, 0x001F); "$4FE0-$4FFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x5000, 0x5FFF), (0x1000, 0x1FFF); "$5000-$5FFF = ROM Addresses $000-$FFF (mirror)")]
    #[test_case((0x6000, 0x603F), (0x0000, 0x003F); "$6000-$603F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6040, 0x607F), (0x0000, 0x003F); "$6040-$607F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6080, 0x60FF), (0x0080, 0x00FF); "$6080-$60FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x6100, 0x613F), (0x0000, 0x003F); "$6100-$613F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6140, 0x617F), (0x0000, 0x003F); "$6140-$617F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6180, 0x61FF), (0x0080, 0x00FF); "$6180-$61FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x6200, 0x623F), (0x0000, 0x003F); "$6200-$623F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6240, 0x627F), (0x0000, 0x003F); "$6240-$627F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6280, 0x629F), (0x0000, 0x001F); "$6280-$629F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x62A0, 0x62BF), (0x0000, 0x001F); "$62A0-$62BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x62C0, 0x62DF), (0x0000, 0x001F); "$62C0-$62DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x62E0, 0x62FF), (0x0000, 0x001F); "$62E0-$62FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6300, 0x633F), (0x0000, 0x003F); "$6300-$633F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6340, 0x637F), (0x0000, 0x003F); "$6340-$637F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6380, 0x639F), (0x0000, 0x001F); "$6380-$639F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x63A0, 0x63BF), (0x0000, 0x001F); "$63A0-$63BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x63C0, 0x63DF), (0x0000, 0x001F); "$63C0-$63DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x63E0, 0x63FF), (0x0000, 0x001F); "$63E0-$63FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6400, 0x643F), (0x0000, 0x003F); "$6400-$643F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6440, 0x647F), (0x0000, 0x003F); "$6440-$647F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6480, 0x64FF), (0x0080, 0x00FF); "$6480-$64FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x6500, 0x653F), (0x0000, 0x003F); "$6500-$653F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6540, 0x657F), (0x0000, 0x003F); "$6540-$657F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6580, 0x65FF), (0x0080, 0x00FF); "$6580-$65FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x6600, 0x663F), (0x0000, 0x003F); "$6600-$663F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6640, 0x667F), (0x0000, 0x003F); "$6640-$667F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6680, 0x669F), (0x0000, 0x001F); "$6680-$669F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x66A0, 0x66BF), (0x0000, 0x001F); "$66A0-$66BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x66C0, 0x66DF), (0x0000, 0x001F); "$66C0-$66DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x66E0, 0x66FF), (0x0000, 0x001F); "$66E0-$66FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6700, 0x673F), (0x0000, 0x003F); "$6700-$673F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6740, 0x677F), (0x0000, 0x003F); "$6740-$677F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6780, 0x679F), (0x0000, 0x001F); "$6780-$679F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x67A0, 0x67BF), (0x0000, 0x001F); "$67A0-$67BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x67C0, 0x67DF), (0x0000, 0x001F); "$67C0-$67DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x67E0, 0x67FF), (0x0000, 0x001F); "$67E0-$67FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6800, 0x683F), (0x0000, 0x003F); "$6800-$683F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6840, 0x687F), (0x0000, 0x003F); "$6840-$687F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6880, 0x68FF), (0x0080, 0x00FF); "$6880-$68FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x6900, 0x693F), (0x0000, 0x003F); "$6900-$693F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6940, 0x697F), (0x0000, 0x003F); "$6940-$697F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6980, 0x69FF), (0x0080, 0x00FF); "$6980-$69FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x6A00, 0x6A3F), (0x0000, 0x003F); "$6A00-$6A3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6A40, 0x6A7F), (0x0000, 0x003F); "$6A40-$6A7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6A80, 0x6A9F), (0x0000, 0x001F); "$6A80-$6A9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6AA0, 0x6ABF), (0x0000, 0x001F); "$6AA0-$6ABF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6AC0, 0x6ADF), (0x0000, 0x001F); "$6AC0-$6ADF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6AE0, 0x6AFF), (0x0000, 0x001F); "$6AE0-$6AFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6B00, 0x6B3F), (0x0000, 0x003F); "$6B00-$6B3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6B40, 0x6B7F), (0x0000, 0x003F); "$6B40-$6B7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6B80, 0x6B9F), (0x0000, 0x001F); "$6B80-$6B9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6BA0, 0x6BBF), (0x0000, 0x001F); "$6BA0-$6BBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6BC0, 0x6BDF), (0x0000, 0x001F); "$6BC0-$6BDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6BE0, 0x6BFF), (0x0000, 0x001F); "$6BE0-$6BFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6C00, 0x6C3F), (0x0000, 0x003F); "$6C00-$6C3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6C40, 0x6C7F), (0x0000, 0x003F); "$6C40-$6C7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6C80, 0x6CFF), (0x0080, 0x00FF); "$6C80-$6CFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x6D00, 0x6D3F), (0x0000, 0x003F); "$6D00-$6D3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6D40, 0x6D7F), (0x0000, 0x003F); "$6D40-$6D7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6D80, 0x6DFF), (0x0080, 0x00FF); "$6D80-$6DFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x6E00, 0x6E3F), (0x0000, 0x003F); "$6E00-$6E3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6E40, 0x6E7F), (0x0000, 0x003F); "$6E40-$6E7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6E80, 0x6E9F), (0x0000, 0x001F); "$6E80-$6E9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6EA0, 0x6EBF), (0x0000, 0x001F); "$6EA0-$6EBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6EC0, 0x6EDF), (0x0000, 0x001F); "$6EC0-$6EDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6EE0, 0x6EFF), (0x0000, 0x001F); "$6EE0-$6EFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6F00, 0x6F3F), (0x0000, 0x003F); "$6F00-$6F3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6F40, 0x6F7F), (0x0000, 0x003F); "$6F40-$6F7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x6F80, 0x6F9F), (0x0000, 0x001F); "$6F80-$6F9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6FA0, 0x6FBF), (0x0000, 0x001F); "$6FA0-$6FBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6FC0, 0x6FDF), (0x0000, 0x001F); "$6FC0-$6FDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x6FE0, 0x6FFF), (0x0000, 0x001F); "$6FE0-$6FFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x7000, 0x7FFF), (0x1000, 0x1FFF); "$7000-$7FFF = ROM Addresses $000-$FFF (mirror)")]
    #[test_case((0x8000, 0x803F), (0x0000, 0x003F); "$8000-$803F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8040, 0x807F), (0x0000, 0x003F); "$8040-$807F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8080, 0x80FF), (0x0080, 0x00FF); "$8080-$80FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x8100, 0x813F), (0x0000, 0x003F); "$8100-$813F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8140, 0x817F), (0x0000, 0x003F); "$8140-$817F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8180, 0x81FF), (0x0080, 0x00FF); "$8180-$81FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x8200, 0x823F), (0x0000, 0x003F); "$8200-$823F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8240, 0x827F), (0x0000, 0x003F); "$8240-$827F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8280, 0x829F), (0x0000, 0x001F); "$8280-$829F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x82A0, 0x82BF), (0x0000, 0x001F); "$82A0-$82BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x82C0, 0x82DF), (0x0000, 0x001F); "$82C0-$82DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x82E0, 0x82FF), (0x0000, 0x001F); "$82E0-$82FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8300, 0x833F), (0x0000, 0x003F); "$8300-$833F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8340, 0x837F), (0x0000, 0x003F); "$8340-$837F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8380, 0x839F), (0x0000, 0x001F); "$8380-$839F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x83A0, 0x83BF), (0x0000, 0x001F); "$83A0-$83BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x83C0, 0x83DF), (0x0000, 0x001F); "$83C0-$83DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x83E0, 0x83FF), (0x0000, 0x001F); "$83E0-$83FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8400, 0x843F), (0x0000, 0x003F); "$8400-$843F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8440, 0x847F), (0x0000, 0x003F); "$8440-$847F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8480, 0x84FF), (0x0080, 0x00FF); "$8480-$84FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x8500, 0x853F), (0x0000, 0x003F); "$8500-$853F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8540, 0x857F), (0x0000, 0x003F); "$8540-$857F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8580, 0x85FF), (0x0080, 0x00FF); "$8580-$85FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x8600, 0x863F), (0x0000, 0x003F); "$8600-$863F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8640, 0x867F), (0x0000, 0x003F); "$8640-$867F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8680, 0x869F), (0x0000, 0x001F); "$8680-$869F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x86A0, 0x86BF), (0x0000, 0x001F); "$86A0-$86BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x86C0, 0x86DF), (0x0000, 0x001F); "$86C0-$86DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x86E0, 0x86FF), (0x0000, 0x001F); "$86E0-$86FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8700, 0x873F), (0x0000, 0x003F); "$8700-$873F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8740, 0x877F), (0x0000, 0x003F); "$8740-$877F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8780, 0x879F), (0x0000, 0x001F); "$8780-$879F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x87A0, 0x87BF), (0x0000, 0x001F); "$87A0-$87BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x87C0, 0x87DF), (0x0000, 0x001F); "$87C0-$87DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x87E0, 0x87FF), (0x0000, 0x001F); "$87E0-$87FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8800, 0x883F), (0x0000, 0x003F); "$8800-$883F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8840, 0x887F), (0x0000, 0x003F); "$8840-$887F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8880, 0x88FF), (0x0080, 0x00FF); "$8880-$88FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x8900, 0x893F), (0x0000, 0x003F); "$8900-$893F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8940, 0x897F), (0x0000, 0x003F); "$8940-$897F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8980, 0x89FF), (0x0080, 0x00FF); "$8980-$89FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x8A00, 0x8A3F), (0x0000, 0x003F); "$8A00-$8A3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8A40, 0x8A7F), (0x0000, 0x003F); "$8A40-$8A7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8A80, 0x8A9F), (0x0000, 0x001F); "$8A80-$8A9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8AA0, 0x8ABF), (0x0000, 0x001F); "$8AA0-$8ABF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8AC0, 0x8ADF), (0x0000, 0x001F); "$8AC0-$8ADF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8AE0, 0x8AFF), (0x0000, 0x001F); "$8AE0-$8AFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8B00, 0x8B3F), (0x0000, 0x003F); "$8B00-$8B3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8B40, 0x8B7F), (0x0000, 0x003F); "$8B40-$8B7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8B80, 0x8B9F), (0x0000, 0x001F); "$8B80-$8B9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8BA0, 0x8BBF), (0x0000, 0x001F); "$8BA0-$8BBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8BC0, 0x8BDF), (0x0000, 0x001F); "$8BC0-$8BDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8BE0, 0x8BFF), (0x0000, 0x001F); "$8BE0-$8BFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8C00, 0x8C3F), (0x0000, 0x003F); "$8C00-$8C3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8C40, 0x8C7F), (0x0000, 0x003F); "$8C40-$8C7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8C80, 0x8CFF), (0x0080, 0x00FF); "$8C80-$8CFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x8D00, 0x8D3F), (0x0000, 0x003F); "$8D00-$8D3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8D40, 0x8D7F), (0x0000, 0x003F); "$8D40-$8D7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8D80, 0x8DFF), (0x0080, 0x00FF); "$8D80-$8DFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0x8E00, 0x8E3F), (0x0000, 0x003F); "$8E00-$8E3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8E40, 0x8E7F), (0x0000, 0x003F); "$8E40-$8E7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8E80, 0x8E9F), (0x0000, 0x001F); "$8E80-$8E9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8EA0, 0x8EBF), (0x0000, 0x001F); "$8EA0-$8EBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8EC0, 0x8EDF), (0x0000, 0x001F); "$8EC0-$8EDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8EE0, 0x8EFF), (0x0000, 0x001F); "$8EE0-$8EFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8F00, 0x8F3F), (0x0000, 0x003F); "$8F00-$8F3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8F40, 0x8F7F), (0x0000, 0x003F); "$8F40-$8F7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0x8F80, 0x8F9F), (0x0000, 0x001F); "$8F80-$8F9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8FA0, 0x8FBF), (0x0000, 0x001F); "$8FA0-$8FBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8FC0, 0x8FDF), (0x0000, 0x001F); "$8FC0-$8FDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x8FE0, 0x8FFF), (0x0000, 0x001F); "$8FE0-$8FFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0x9000, 0x9FFF), (0x1000, 0x1FFF); "$9000-$9FFF = ROM Addresses $000-$FFF (mirror)")]
    #[test_case((0xA000, 0xA03F), (0x0000, 0x003F); "$A000-$A03F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA040, 0xA07F), (0x0000, 0x003F); "$A040-$A07F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA080, 0xA0FF), (0x0080, 0x00FF); "$A080-$A0FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xA100, 0xA13F), (0x0000, 0x003F); "$A100-$A13F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA140, 0xA17F), (0x0000, 0x003F); "$A140-$A17F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA180, 0xA1FF), (0x0080, 0x00FF); "$A180-$A1FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xA200, 0xA23F), (0x0000, 0x003F); "$A200-$A23F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA240, 0xA27F), (0x0000, 0x003F); "$A240-$A27F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA280, 0xA29F), (0x0000, 0x001F); "$A280-$A29F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA2A0, 0xA2BF), (0x0000, 0x001F); "$A2A0-$A2BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA2C0, 0xA2DF), (0x0000, 0x001F); "$A2C0-$A2DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA2E0, 0xA2FF), (0x0000, 0x001F); "$A2E0-$A2FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA300, 0xA33F), (0x0000, 0x003F); "$A300-$A33F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA340, 0xA37F), (0x0000, 0x003F); "$A340-$A37F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA380, 0xA39F), (0x0000, 0x001F); "$A380-$A39F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA3A0, 0xA3BF), (0x0000, 0x001F); "$A3A0-$A3BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA3C0, 0xA3DF), (0x0000, 0x001F); "$A3C0-$A3DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA3E0, 0xA3FF), (0x0000, 0x001F); "$A3E0-$A3FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA400, 0xA43F), (0x0000, 0x003F); "$A400-$A43F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA440, 0xA47F), (0x0000, 0x003F); "$A440-$A47F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA480, 0xA4FF), (0x0080, 0x00FF); "$A480-$A4FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xA500, 0xA53F), (0x0000, 0x003F); "$A500-$A53F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA540, 0xA57F), (0x0000, 0x003F); "$A540-$A57F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA580, 0xA5FF), (0x0080, 0x00FF); "$A580-$A5FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xA600, 0xA63F), (0x0000, 0x003F); "$A600-$A63F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA640, 0xA67F), (0x0000, 0x003F); "$A640-$A67F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA680, 0xA69F), (0x0000, 0x001F); "$A680-$A69F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA6A0, 0xA6BF), (0x0000, 0x001F); "$A6A0-$A6BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA6C0, 0xA6DF), (0x0000, 0x001F); "$A6C0-$A6DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA6E0, 0xA6FF), (0x0000, 0x001F); "$A6E0-$A6FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA700, 0xA73F), (0x0000, 0x003F); "$A700-$A73F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA740, 0xA77F), (0x0000, 0x003F); "$A740-$A77F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA780, 0xA79F), (0x0000, 0x001F); "$A780-$A79F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA7A0, 0xA7BF), (0x0000, 0x001F); "$A7A0-$A7BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA7C0, 0xA7DF), (0x0000, 0x001F); "$A7C0-$A7DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA7E0, 0xA7FF), (0x0000, 0x001F); "$A7E0-$A7FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xA800, 0xA83F), (0x0000, 0x003F); "$A800-$A83F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA840, 0xA87F), (0x0000, 0x003F); "$A840-$A87F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA880, 0xA8FF), (0x0080, 0x00FF); "$A880-$A8FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xA900, 0xA93F), (0x0000, 0x003F); "$A900-$A93F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA940, 0xA97F), (0x0000, 0x003F); "$A940-$A97F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xA980, 0xA9FF), (0x0080, 0x00FF); "$A980-$A9FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xAA00, 0xAA3F), (0x0000, 0x003F); "$AA00-$AA3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAA40, 0xAA7F), (0x0000, 0x003F); "$AA40-$AA7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAA80, 0xAA9F), (0x0000, 0x001F); "$AA80-$AA9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAAA0, 0xAABF), (0x0000, 0x001F); "$AAA0-$AABF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAAC0, 0xAADF), (0x0000, 0x001F); "$AAC0-$AADF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAAE0, 0xAAFF), (0x0000, 0x001F); "$AAE0-$AAFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAB00, 0xAB3F), (0x0000, 0x003F); "$AB00-$AB3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAB40, 0xAB7F), (0x0000, 0x003F); "$AB40-$AB7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAB80, 0xAB9F), (0x0000, 0x001F); "$AB80-$AB9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xABA0, 0xABBF), (0x0000, 0x001F); "$ABA0-$ABBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xABC0, 0xABDF), (0x0000, 0x001F); "$ABC0-$ABDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xABE0, 0xABFF), (0x0000, 0x001F); "$ABE0-$ABFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAC00, 0xAC3F), (0x0000, 0x003F); "$AC00-$AC3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAC40, 0xAC7F), (0x0000, 0x003F); "$AC40-$AC7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAC80, 0xACFF), (0x0080, 0x00FF); "$AC80-$ACFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xAD00, 0xAD3F), (0x0000, 0x003F); "$AD00-$AD3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAD40, 0xAD7F), (0x0000, 0x003F); "$AD40-$AD7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAD80, 0xADFF), (0x0080, 0x00FF); "$AD80-$ADFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xAE00, 0xAE3F), (0x0000, 0x003F); "$AE00-$AE3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAE40, 0xAE7F), (0x0000, 0x003F); "$AE40-$AE7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAE80, 0xAE9F), (0x0000, 0x001F); "$AE80-$AE9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAEA0, 0xAEBF), (0x0000, 0x001F); "$AEA0-$AEBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAEC0, 0xAEDF), (0x0000, 0x001F); "$AEC0-$AEDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAEE0, 0xAEFF), (0x0000, 0x001F); "$AEE0-$AEFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAF00, 0xAF3F), (0x0000, 0x003F); "$AF00-$AF3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAF40, 0xAF7F), (0x0000, 0x003F); "$AF40-$AF7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xAF80, 0xAF9F), (0x0000, 0x001F); "$AF80-$AF9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAFA0, 0xAFBF), (0x0000, 0x001F); "$AFA0-$AFBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAFC0, 0xAFDF), (0x0000, 0x001F); "$AFC0-$AFDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xAFE0, 0xAFFF), (0x0000, 0x001F); "$AFE0-$AFFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xB000, 0xBFFF), (0x1000, 0x1FFF); "$B000-$BFFF = ROM Addresses $000-$FFF (mirror)")]
    #[test_case((0xC000, 0xC03F), (0x0000, 0x003F); "$C000-$C03F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC040, 0xC07F), (0x0000, 0x003F); "$C040-$C07F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC080, 0xC0FF), (0x0080, 0x00FF); "$C080-$C0FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xC100, 0xC13F), (0x0000, 0x003F); "$C100-$C13F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC140, 0xC17F), (0x0000, 0x003F); "$C140-$C17F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC180, 0xC1FF), (0x0080, 0x00FF); "$C180-$C1FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xC200, 0xC23F), (0x0000, 0x003F); "$C200-$C23F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC240, 0xC27F), (0x0000, 0x003F); "$C240-$C27F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC280, 0xC29F), (0x0000, 0x001F); "$C280-$C29F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC2A0, 0xC2BF), (0x0000, 0x001F); "$C2A0-$C2BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC2C0, 0xC2DF), (0x0000, 0x001F); "$C2C0-$C2DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC2E0, 0xC2FF), (0x0000, 0x001F); "$C2E0-$C2FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC300, 0xC33F), (0x0000, 0x003F); "$C300-$C33F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC340, 0xC37F), (0x0000, 0x003F); "$C340-$C37F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC380, 0xC39F), (0x0000, 0x001F); "$C380-$C39F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC3A0, 0xC3BF), (0x0000, 0x001F); "$C3A0-$C3BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC3C0, 0xC3DF), (0x0000, 0x001F); "$C3C0-$C3DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC3E0, 0xC3FF), (0x0000, 0x001F); "$C3E0-$C3FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC400, 0xC43F), (0x0000, 0x003F); "$C400-$C43F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC440, 0xC47F), (0x0000, 0x003F); "$C440-$C47F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC480, 0xC4FF), (0x0080, 0x00FF); "$C480-$C4FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xC500, 0xC53F), (0x0000, 0x003F); "$C500-$C53F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC540, 0xC57F), (0x0000, 0x003F); "$C540-$C57F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC580, 0xC5FF), (0x0080, 0x00FF); "$C580-$C5FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xC600, 0xC63F), (0x0000, 0x003F); "$C600-$C63F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC640, 0xC67F), (0x0000, 0x003F); "$C640-$C67F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC680, 0xC69F), (0x0000, 0x001F); "$C680-$C69F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC6A0, 0xC6BF), (0x0000, 0x001F); "$C6A0-$C6BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC6C0, 0xC6DF), (0x0000, 0x001F); "$C6C0-$C6DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC6E0, 0xC6FF), (0x0000, 0x001F); "$C6E0-$C6FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC700, 0xC73F), (0x0000, 0x003F); "$C700-$C73F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC740, 0xC77F), (0x0000, 0x003F); "$C740-$C77F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC780, 0xC79F), (0x0000, 0x001F); "$C780-$C79F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC7A0, 0xC7BF), (0x0000, 0x001F); "$C7A0-$C7BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC7C0, 0xC7DF), (0x0000, 0x001F); "$C7C0-$C7DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC7E0, 0xC7FF), (0x0000, 0x001F); "$C7E0-$C7FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xC800, 0xC83F), (0x0000, 0x003F); "$C800-$C83F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC840, 0xC87F), (0x0000, 0x003F); "$C840-$C87F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC880, 0xC8FF), (0x0080, 0x00FF); "$C880-$C8FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xC900, 0xC93F), (0x0000, 0x003F); "$C900-$C93F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC940, 0xC97F), (0x0000, 0x003F); "$C940-$C97F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xC980, 0xC9FF), (0x0080, 0x00FF); "$C980-$C9FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xCA00, 0xCA3F), (0x0000, 0x003F); "$CA00-$CA3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCA40, 0xCA7F), (0x0000, 0x003F); "$CA40-$CA7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCA80, 0xCA9F), (0x0000, 0x001F); "$CA80-$CA9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCAA0, 0xCABF), (0x0000, 0x001F); "$CAA0-$CABF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCAC0, 0xCADF), (0x0000, 0x001F); "$CAC0-$CADF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCAE0, 0xCAFF), (0x0000, 0x001F); "$CAE0-$CAFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCB00, 0xCB3F), (0x0000, 0x003F); "$CB00-$CB3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCB40, 0xCB7F), (0x0000, 0x003F); "$CB40-$CB7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCB80, 0xCB9F), (0x0000, 0x001F); "$CB80-$CB9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCBA0, 0xCBBF), (0x0000, 0x001F); "$CBA0-$CBBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCBC0, 0xCBDF), (0x0000, 0x001F); "$CBC0-$CBDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCBE0, 0xCBFF), (0x0000, 0x001F); "$CBE0-$CBFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCC00, 0xCC3F), (0x0000, 0x003F); "$CC00-$CC3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCC40, 0xCC7F), (0x0000, 0x003F); "$CC40-$CC7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCC80, 0xCCFF), (0x0080, 0x00FF); "$CC80-$CCFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xCD00, 0xCD3F), (0x0000, 0x003F); "$CD00-$CD3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCD40, 0xCD7F), (0x0000, 0x003F); "$CD40-$CD7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCD80, 0xCDFF), (0x0080, 0x00FF); "$CD80-$CDFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xCE00, 0xCE3F), (0x0000, 0x003F); "$CE00-$CE3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCE40, 0xCE7F), (0x0000, 0x003F); "$CE40-$CE7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCE80, 0xCE9F), (0x0000, 0x001F); "$CE80-$CE9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCEA0, 0xCEBF), (0x0000, 0x001F); "$CEA0-$CEBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCEC0, 0xCEDF), (0x0000, 0x001F); "$CEC0-$CEDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCEE0, 0xCEFF), (0x0000, 0x001F); "$CEE0-$CEFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCF00, 0xCF3F), (0x0000, 0x003F); "$CF00-$CF3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCF40, 0xCF7F), (0x0000, 0x003F); "$CF40-$CF7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xCF80, 0xCF9F), (0x0000, 0x001F); "$CF80-$CF9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCFA0, 0xCFBF), (0x0000, 0x001F); "$CFA0-$CFBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCFC0, 0xCFDF), (0x0000, 0x001F); "$CFC0-$CFDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xCFE0, 0xCFFF), (0x0000, 0x001F); "$CFE0-$CFFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xD000, 0xDFFF), (0x1000, 0x1FFF); "$D000-$DFFF = ROM Addresses $000-$FFF (mirror)")]
    #[test_case((0xE000, 0xE03F), (0x0000, 0x003F); "$E000-$E03F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE040, 0xE07F), (0x0000, 0x003F); "$E040-$E07F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE080, 0xE0FF), (0x0080, 0x00FF); "$E080-$E0FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xE100, 0xE13F), (0x0000, 0x003F); "$E100-$E13F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE140, 0xE17F), (0x0000, 0x003F); "$E140-$E17F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE180, 0xE1FF), (0x0080, 0x00FF); "$E180-$E1FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xE200, 0xE23F), (0x0000, 0x003F); "$E200-$E23F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE240, 0xE27F), (0x0000, 0x003F); "$E240-$E27F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE280, 0xE29F), (0x0000, 0x001F); "$E280-$E29F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE2A0, 0xE2BF), (0x0000, 0x001F); "$E2A0-$E2BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE2C0, 0xE2DF), (0x0000, 0x001F); "$E2C0-$E2DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE2E0, 0xE2FF), (0x0000, 0x001F); "$E2E0-$E2FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE300, 0xE33F), (0x0000, 0x003F); "$E300-$E33F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE340, 0xE37F), (0x0000, 0x003F); "$E340-$E37F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE380, 0xE39F), (0x0000, 0x001F); "$E380-$E39F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE3A0, 0xE3BF), (0x0000, 0x001F); "$E3A0-$E3BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE3C0, 0xE3DF), (0x0000, 0x001F); "$E3C0-$E3DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE3E0, 0xE3FF), (0x0000, 0x001F); "$E3E0-$E3FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE400, 0xE43F), (0x0000, 0x003F); "$E400-$E43F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE440, 0xE47F), (0x0000, 0x003F); "$E440-$E47F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE480, 0xE4FF), (0x0080, 0x00FF); "$E480-$E4FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xE500, 0xE53F), (0x0000, 0x003F); "$E500-$E53F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE540, 0xE57F), (0x0000, 0x003F); "$E540-$E57F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE580, 0xE5FF), (0x0080, 0x00FF); "$E580-$E5FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xE600, 0xE63F), (0x0000, 0x003F); "$E600-$E63F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE640, 0xE67F), (0x0000, 0x003F); "$E640-$E67F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE680, 0xE69F), (0x0000, 0x001F); "$E680-$E69F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE6A0, 0xE6BF), (0x0000, 0x001F); "$E6A0-$E6BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE6C0, 0xE6DF), (0x0000, 0x001F); "$E6C0-$E6DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE6E0, 0xE6FF), (0x0000, 0x001F); "$E6E0-$E6FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE700, 0xE73F), (0x0000, 0x003F); "$E700-$E73F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE740, 0xE77F), (0x0000, 0x003F); "$E740-$E77F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE780, 0xE79F), (0x0000, 0x001F); "$E780-$E79F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE7A0, 0xE7BF), (0x0000, 0x001F); "$E7A0-$E7BF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE7C0, 0xE7DF), (0x0000, 0x001F); "$E7C0-$E7DF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE7E0, 0xE7FF), (0x0000, 0x001F); "$E7E0-$E7FF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xE800, 0xE83F), (0x0000, 0x003F); "$E800-$E83F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE840, 0xE87F), (0x0000, 0x003F); "$E840-$E87F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE880, 0xE8FF), (0x0080, 0x00FF); "$E880-$E8FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xE900, 0xE93F), (0x0000, 0x003F); "$E900-$E93F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE940, 0xE97F), (0x0000, 0x003F); "$E940-$E97F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xE980, 0xE9FF), (0x0080, 0x00FF); "$E980-$E9FF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xEA00, 0xEA3F), (0x0000, 0x003F); "$EA00-$EA3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEA40, 0xEA7F), (0x0000, 0x003F); "$EA40-$EA7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEA80, 0xEA9F), (0x0000, 0x001F); "$EA80-$EA9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEAA0, 0xEABF), (0x0000, 0x001F); "$EAA0-$EABF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEAC0, 0xEADF), (0x0000, 0x001F); "$EAC0-$EADF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEAE0, 0xEAFF), (0x0000, 0x001F); "$EAE0-$EAFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEB00, 0xEB3F), (0x0000, 0x003F); "$EB00-$EB3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEB40, 0xEB7F), (0x0000, 0x003F); "$EB40-$EB7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEB80, 0xEB9F), (0x0000, 0x001F); "$EB80-$EB9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEBA0, 0xEBBF), (0x0000, 0x001F); "$EBA0-$EBBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEBC0, 0xEBDF), (0x0000, 0x001F); "$EBC0-$EBDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEBE0, 0xEBFF), (0x0000, 0x001F); "$EBE0-$EBFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEC00, 0xEC3F), (0x0000, 0x003F); "$EC00-$EC3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEC40, 0xEC7F), (0x0000, 0x003F); "$EC40-$EC7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEC80, 0xECFF), (0x0080, 0x00FF); "$EC80-$ECFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xED00, 0xED3F), (0x0000, 0x003F); "$ED00-$ED3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xED40, 0xED7F), (0x0000, 0x003F); "$ED40-$ED7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xED80, 0xEDFF), (0x0080, 0x00FF); "$ED80-$EDFF = RIOT RAM $80-$FF        (mirror)")]
    #[test_case((0xEE00, 0xEE3F), (0x0000, 0x003F); "$EE00-$EE3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEE40, 0xEE7F), (0x0000, 0x003F); "$EE40-$EE7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEE80, 0xEE9F), (0x0000, 0x001F); "$EE80-$EE9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEEA0, 0xEEBF), (0x0000, 0x001F); "$EEA0-$EEBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEEC0, 0xEEDF), (0x0000, 0x001F); "$EEC0-$EEDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEEE0, 0xEEFF), (0x0000, 0x001F); "$EEE0-$EEFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEF00, 0xEF3F), (0x0000, 0x003F); "$EF00-$EF3F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEF40, 0xEF7F), (0x0000, 0x003F); "$EF40-$EF7F = TIA Addresses $00-$3F   (mirror)")]
    #[test_case((0xEF80, 0xEF9F), (0x0000, 0x001F); "$EF80-$EF9F = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEFA0, 0xEFBF), (0x0000, 0x001F); "$EFA0-$EFBF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEFC0, 0xEFDF), (0x0000, 0x001F); "$EFC0-$EFDF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xEFE0, 0xEFFF), (0x0000, 0x001F); "$EFE0-$EFFF = RIOT Addresses $00-$1F  (mirror)")]
    #[test_case((0xF000, 0xFFFF), (0x1000, 0x1FFF); "$F000-$FFFF = ROM Addresses $000-$FFF (mirror)")]
    /// NOTE: Tests from https://www.qotile.net/minidig/docs/2600_mem_map.txt
    fn resolve(addr: (u16, u16), base_addr: (u16, u16)) {
        let obt = mm_6507(addr.0.into());
        let exp = base_addr.0.into();
        assert_eq!(obt, exp, "0x{obt:04X} -> 0x{exp:04X}: Lower bound error");

        let obt = mm_6507(((addr.0 / 2) + (addr.1 / 2)).into());
        let exp = ((base_addr.0 / 2) + (base_addr.1 / 2)).into();
        assert_eq!(obt, exp, "0x{obt:04X} -> 0x{exp:04X}: Mid point error");

        let obt = mm_6507(addr.1.into());
        let exp = base_addr.1.into();
        assert_eq!(obt, exp, "0x{obt:04X} -> 0x{exp:04X}: Upper bound error");
    }
}
