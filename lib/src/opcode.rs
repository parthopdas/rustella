use super::{cpu::MCS6502, mem::Memory};

/// Reference: https://www.masswerk.at/6502/6502_instruction_set.html
#[allow(dead_code)]
trait OpCode: Sync {
    fn exec(&self, cpu: &mut MCS6502, mem: &mut Memory);
}

struct OpCodeNYI {}
impl OpCode for OpCodeNYI {
    fn exec(&self, _cpu: &mut MCS6502, _mem: &mut Memory) {
        todo!()
    }
}

struct OpCodeIllegal {}
impl OpCode for OpCodeIllegal {
    fn exec(&self, _cpu: &mut MCS6502, _mem: &mut Memory) {
        panic!("Illegal opcode")
    }
}

/// Reference: https://www.masswerk.at/6502/6502_instruction_set.html
#[allow(dead_code)]
const ALL_OPCODES: &[&dyn OpCode; 0x1_00] = &[
    /* 0x00 */ &OpCodeNYI {},
    /* 0x01 */ &OpCodeNYI {},
    /* 0x02 */ &OpCodeIllegal {},
    /* 0x03 */ &OpCodeIllegal {},
    /* 0x04 */ &OpCodeIllegal {},
    /* 0x05 */ &OpCodeNYI {},
    /* 0x06 */ &OpCodeNYI {},
    /* 0x07 */ &OpCodeIllegal {},
    /* 0x08 */ &OpCodeNYI {},
    /* 0x09 */ &OpCodeNYI {},
    /* 0x0A */ &OpCodeNYI {},
    /* 0x0B */ &OpCodeIllegal {},
    /* 0x0C */ &OpCodeIllegal {},
    /* 0x0D */ &OpCodeNYI {},
    /* 0x0E */ &OpCodeNYI {},
    /* 0x0F */ &OpCodeIllegal {},
    /* 0x10 */ &OpCodeNYI {},
    /* 0x11 */ &OpCodeNYI {},
    /* 0x12 */ &OpCodeIllegal {},
    /* 0x13 */ &OpCodeIllegal {},
    /* 0x14 */ &OpCodeIllegal {},
    /* 0x15 */ &OpCodeNYI {},
    /* 0x16 */ &OpCodeNYI {},
    /* 0x17 */ &OpCodeIllegal {},
    /* 0x18 */ &OpCodeNYI {},
    /* 0x19 */ &OpCodeNYI {},
    /* 0x1A */ &OpCodeIllegal {},
    /* 0x1B */ &OpCodeIllegal {},
    /* 0x1C */ &OpCodeIllegal {},
    /* 0x1D */ &OpCodeNYI {},
    /* 0x1E */ &OpCodeNYI {},
    /* 0x1F */ &OpCodeIllegal {},
    /* 0x20 */ &OpCodeNYI {},
    /* 0x21 */ &OpCodeNYI {},
    /* 0x22 */ &OpCodeIllegal {},
    /* 0x23 */ &OpCodeIllegal {},
    /* 0x24 */ &OpCodeNYI {},
    /* 0x25 */ &OpCodeNYI {},
    /* 0x26 */ &OpCodeNYI {},
    /* 0x27 */ &OpCodeIllegal {},
    /* 0x28 */ &OpCodeNYI {},
    /* 0x29 */ &OpCodeNYI {},
    /* 0x2A */ &OpCodeNYI {},
    /* 0x2B */ &OpCodeIllegal {},
    /* 0x2C */ &OpCodeNYI {},
    /* 0x2D */ &OpCodeNYI {},
    /* 0x2E */ &OpCodeNYI {},
    /* 0x2F */ &OpCodeIllegal {},
    /* 0x30 */ &OpCodeNYI {},
    /* 0x31 */ &OpCodeNYI {},
    /* 0x32 */ &OpCodeIllegal {},
    /* 0x33 */ &OpCodeIllegal {},
    /* 0x34 */ &OpCodeIllegal {},
    /* 0x35 */ &OpCodeNYI {},
    /* 0x36 */ &OpCodeNYI {},
    /* 0x37 */ &OpCodeIllegal {},
    /* 0x38 */ &OpCodeNYI {},
    /* 0x39 */ &OpCodeNYI {},
    /* 0x3A */ &OpCodeIllegal {},
    /* 0x3B */ &OpCodeIllegal {},
    /* 0x3C */ &OpCodeIllegal {},
    /* 0x3D */ &OpCodeNYI {},
    /* 0x3E */ &OpCodeNYI {},
    /* 0x3F */ &OpCodeIllegal {},
    /* 0x40 */ &OpCodeNYI {},
    /* 0x41 */ &OpCodeNYI {},
    /* 0x42 */ &OpCodeIllegal {},
    /* 0x43 */ &OpCodeIllegal {},
    /* 0x44 */ &OpCodeIllegal {},
    /* 0x45 */ &OpCodeNYI {},
    /* 0x46 */ &OpCodeNYI {},
    /* 0x47 */ &OpCodeIllegal {},
    /* 0x48 */ &OpCodeNYI {},
    /* 0x49 */ &OpCodeNYI {},
    /* 0x4A */ &OpCodeNYI {},
    /* 0x4B */ &OpCodeIllegal {},
    /* 0x4C */ &OpCodeNYI {},
    /* 0x4D */ &OpCodeNYI {},
    /* 0x4E */ &OpCodeNYI {},
    /* 0x4F */ &OpCodeIllegal {},
    /* 0x50 */ &OpCodeNYI {},
    /* 0x51 */ &OpCodeNYI {},
    /* 0x52 */ &OpCodeIllegal {},
    /* 0x53 */ &OpCodeIllegal {},
    /* 0x54 */ &OpCodeIllegal {},
    /* 0x55 */ &OpCodeNYI {},
    /* 0x56 */ &OpCodeNYI {},
    /* 0x57 */ &OpCodeIllegal {},
    /* 0x58 */ &OpCodeNYI {},
    /* 0x59 */ &OpCodeNYI {},
    /* 0x5A */ &OpCodeIllegal {},
    /* 0x5B */ &OpCodeIllegal {},
    /* 0x5C */ &OpCodeIllegal {},
    /* 0x5D */ &OpCodeNYI {},
    /* 0x5E */ &OpCodeNYI {},
    /* 0x5F */ &OpCodeIllegal {},
    /* 0x60 */ &OpCodeNYI {},
    /* 0x61 */ &OpCodeNYI {},
    /* 0x62 */ &OpCodeIllegal {},
    /* 0x63 */ &OpCodeIllegal {},
    /* 0x64 */ &OpCodeIllegal {},
    /* 0x65 */ &OpCodeNYI {},
    /* 0x66 */ &OpCodeNYI {},
    /* 0x67 */ &OpCodeIllegal {},
    /* 0x68 */ &OpCodeNYI {},
    /* 0x69 */ &OpCodeNYI {},
    /* 0x6A */ &OpCodeNYI {},
    /* 0x6B */ &OpCodeIllegal {},
    /* 0x6C */ &OpCodeNYI {},
    /* 0x6D */ &OpCodeNYI {},
    /* 0x6E */ &OpCodeNYI {},
    /* 0x6F */ &OpCodeIllegal {},
    /* 0x70 */ &OpCodeNYI {},
    /* 0x71 */ &OpCodeNYI {},
    /* 0x72 */ &OpCodeIllegal {},
    /* 0x73 */ &OpCodeIllegal {},
    /* 0x74 */ &OpCodeIllegal {},
    /* 0x75 */ &OpCodeNYI {},
    /* 0x76 */ &OpCodeNYI {},
    /* 0x77 */ &OpCodeIllegal {},
    /* 0x78 */ &OpCodeNYI {},
    /* 0x79 */ &OpCodeNYI {},
    /* 0x7A */ &OpCodeIllegal {},
    /* 0x7B */ &OpCodeIllegal {},
    /* 0x7C */ &OpCodeIllegal {},
    /* 0x7D */ &OpCodeNYI {},
    /* 0x7E */ &OpCodeNYI {},
    /* 0x7F */ &OpCodeIllegal {},
    /* 0x80 */ &OpCodeIllegal {},
    /* 0x81 */ &OpCodeNYI {},
    /* 0x82 */ &OpCodeIllegal {},
    /* 0x83 */ &OpCodeIllegal {},
    /* 0x84 */ &OpCodeNYI {},
    /* 0x85 */ &OpCodeNYI {},
    /* 0x86 */ &OpCodeNYI {},
    /* 0x87 */ &OpCodeIllegal {},
    /* 0x88 */ &OpCodeNYI {},
    /* 0x89 */ &OpCodeIllegal {},
    /* 0x8A */ &OpCodeNYI {},
    /* 0x8B */ &OpCodeIllegal {},
    /* 0x8C */ &OpCodeNYI {},
    /* 0x8D */ &OpCodeNYI {},
    /* 0x8E */ &OpCodeNYI {},
    /* 0x8F */ &OpCodeIllegal {},
    /* 0x90 */ &OpCodeNYI {},
    /* 0x91 */ &OpCodeNYI {},
    /* 0x92 */ &OpCodeIllegal {},
    /* 0x93 */ &OpCodeIllegal {},
    /* 0x94 */ &OpCodeNYI {},
    /* 0x95 */ &OpCodeNYI {},
    /* 0x96 */ &OpCodeNYI {},
    /* 0x97 */ &OpCodeIllegal {},
    /* 0x98 */ &OpCodeNYI {},
    /* 0x99 */ &OpCodeNYI {},
    /* 0x9A */ &OpCodeNYI {},
    /* 0x9B */ &OpCodeIllegal {},
    /* 0x9C */ &OpCodeIllegal {},
    /* 0x9D */ &OpCodeNYI {},
    /* 0x9E */ &OpCodeIllegal {},
    /* 0x9F */ &OpCodeIllegal {},
    /* 0xA0 */ &OpCodeNYI {},
    /* 0xA1 */ &OpCodeNYI {},
    /* 0xA2 */ &OpCodeNYI {},
    /* 0xA3 */ &OpCodeIllegal {},
    /* 0xA4 */ &OpCodeNYI {},
    /* 0xA5 */ &OpCodeNYI {},
    /* 0xA6 */ &OpCodeNYI {},
    /* 0xA7 */ &OpCodeIllegal {},
    /* 0xA8 */ &OpCodeNYI {},
    /* 0xA9 */ &OpCodeNYI {},
    /* 0xAA */ &OpCodeNYI {},
    /* 0xAB */ &OpCodeIllegal {},
    /* 0xAC */ &OpCodeNYI {},
    /* 0xAD */ &OpCodeNYI {},
    /* 0xAE */ &OpCodeNYI {},
    /* 0xAF */ &OpCodeIllegal {},
    /* 0xB0 */ &OpCodeNYI {},
    /* 0xB1 */ &OpCodeNYI {},
    /* 0xB2 */ &OpCodeIllegal {},
    /* 0xB3 */ &OpCodeIllegal {},
    /* 0xB4 */ &OpCodeNYI {},
    /* 0xB5 */ &OpCodeNYI {},
    /* 0xB6 */ &OpCodeNYI {},
    /* 0xB7 */ &OpCodeIllegal {},
    /* 0xB8 */ &OpCodeNYI {},
    /* 0xB9 */ &OpCodeNYI {},
    /* 0xBA */ &OpCodeNYI {},
    /* 0xBB */ &OpCodeIllegal {},
    /* 0xBC */ &OpCodeNYI {},
    /* 0xBD */ &OpCodeNYI {},
    /* 0xBE */ &OpCodeNYI {},
    /* 0xBF */ &OpCodeIllegal {},
    /* 0xC0 */ &OpCodeNYI {},
    /* 0xC1 */ &OpCodeNYI {},
    /* 0xC2 */ &OpCodeIllegal {},
    /* 0xC3 */ &OpCodeIllegal {},
    /* 0xC4 */ &OpCodeNYI {},
    /* 0xC5 */ &OpCodeNYI {},
    /* 0xC6 */ &OpCodeNYI {},
    /* 0xC7 */ &OpCodeIllegal {},
    /* 0xC8 */ &OpCodeNYI {},
    /* 0xC9 */ &OpCodeNYI {},
    /* 0xCA */ &OpCodeNYI {},
    /* 0xCB */ &OpCodeIllegal {},
    /* 0xCC */ &OpCodeNYI {},
    /* 0xCD */ &OpCodeNYI {},
    /* 0xCE */ &OpCodeNYI {},
    /* 0xCF */ &OpCodeIllegal {},
    /* 0xD0 */ &OpCodeNYI {},
    /* 0xD1 */ &OpCodeNYI {},
    /* 0xD2 */ &OpCodeIllegal {},
    /* 0xD3 */ &OpCodeIllegal {},
    /* 0xD4 */ &OpCodeIllegal {},
    /* 0xD5 */ &OpCodeNYI {},
    /* 0xD6 */ &OpCodeNYI {},
    /* 0xD7 */ &OpCodeIllegal {},
    /* 0xD8 */ &OpCodeNYI {},
    /* 0xD9 */ &OpCodeNYI {},
    /* 0xDA */ &OpCodeIllegal {},
    /* 0xDB */ &OpCodeIllegal {},
    /* 0xDC */ &OpCodeIllegal {},
    /* 0xDD */ &OpCodeNYI {},
    /* 0xDE */ &OpCodeNYI {},
    /* 0xDF */ &OpCodeIllegal {},
    /* 0xE0 */ &OpCodeNYI {},
    /* 0xE1 */ &OpCodeNYI {},
    /* 0xE2 */ &OpCodeIllegal {},
    /* 0xE3 */ &OpCodeIllegal {},
    /* 0xE4 */ &OpCodeNYI {},
    /* 0xE5 */ &OpCodeNYI {},
    /* 0xE6 */ &OpCodeNYI {},
    /* 0xE7 */ &OpCodeIllegal {},
    /* 0xE8 */ &OpCodeNYI {},
    /* 0xE9 */ &OpCodeNYI {},
    /* 0xEA */ &OpCodeNYI {},
    /* 0xEB */ &OpCodeIllegal {},
    /* 0xEC */ &OpCodeNYI {},
    /* 0xED */ &OpCodeNYI {},
    /* 0xEE */ &OpCodeNYI {},
    /* 0xEF */ &OpCodeIllegal {},
    /* 0xF0 */ &OpCodeNYI {},
    /* 0xF1 */ &OpCodeNYI {},
    /* 0xF2 */ &OpCodeIllegal {},
    /* 0xF3 */ &OpCodeIllegal {},
    /* 0xF4 */ &OpCodeIllegal {},
    /* 0xF5 */ &OpCodeNYI {},
    /* 0xF6 */ &OpCodeNYI {},
    /* 0xF7 */ &OpCodeIllegal {},
    /* 0xF8 */ &OpCodeNYI {},
    /* 0xF9 */ &OpCodeNYI {},
    /* 0xFA */ &OpCodeIllegal {},
    /* 0xFB */ &OpCodeIllegal {},
    /* 0xFC */ &OpCodeIllegal {},
    /* 0xFD */ &OpCodeNYI {},
    /* 0xFE */ &OpCodeNYI {},
    /* 0xFF */ &OpCodeIllegal {},
];

/*
Run the following on https://www.masswerk.at/6502/6502_instruction_set.html
- JSON.stringify([...document.querySelectorAll("dl[class='opcodes'] [aria-label='details'] tbody")].flatMap(x => [...x.querySelectorAll("tr")].slice(1).map(e => { const fields = [...e.childNodes].map(c => c.innerText); const obj = {}; obj["addressing"] = fields[0].trim(); obj["assembler"] = fields[1].trim(); obj["opc"] = fields[2].trim(); obj["bytes"] = fields[3].trim(); obj["cycles"] = fields[4].trim(); return obj })))
- gc -Raw D:\src\delme\opc.json | ConvertFrom-Json | sort -Property opc | ConvertTo-Json
*/
