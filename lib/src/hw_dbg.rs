/// NOTE: See opc.json
/// To regenerate this run
/// $map = @{}; gc -Raw D:\src\delme\opc.json | ConvertFrom-Json | sort -Property opc | % { $map[$_.opc] = '/* 0x{0:x2} */ ("{1}", {2}, "{3}"),' -f ($_.opc, $_.assembler, $_.bytes, $_.cycles) }
/// 0..0xff | % { $opc = "{0:X2}" -f $_; if ($map.Contains($opc)) { "    {0}" -f $map[$opc] } else { '    /* 0x{0} */ ("???", 0, "????")' -f $opc } } 
#[rustfmt::skip]
pub const ALL_OPCODE_INFO: &[(&str, usize, &str); 0x1_00] = &[
    /* 0x00 */ ("BRK", 1, "7"),
    /* 0x01 */ ("ORA (oper,X)", 2, "6"),
    /* 0x02 */ ("???", 0, "????"),
    /* 0x03 */ ("???", 0, "????"),
    /* 0x04 */ ("???", 0, "????"),
    /* 0x05 */ ("ORA oper", 2, "3"),
    /* 0x06 */ ("ASL oper", 2, "5"),
    /* 0x07 */ ("???", 0, "????"),
    /* 0x08 */ ("PHP", 1, "3"),
    /* 0x09 */ ("ORA #oper", 2, "2"),
    /* 0x0A */ ("ASL A", 1, "2"),
    /* 0x0B */ ("???", 0, "????"),
    /* 0x0C */ ("???", 0, "????"),
    /* 0x0D */ ("ORA oper", 3, "4"),
    /* 0x0E */ ("ASL oper", 3, "6"),
    /* 0x0F */ ("???", 0, "????"),
    /* 0x10 */ ("BPL oper", 2, "2**"),
    /* 0x11 */ ("ORA (oper),Y", 2, "5*"),
    /* 0x12 */ ("???", 0, "????"),
    /* 0x13 */ ("???", 0, "????"),
    /* 0x14 */ ("???", 0, "????"),
    /* 0x15 */ ("ORA oper,X", 2, "4"),
    /* 0x16 */ ("ASL oper,X", 2, "6"),
    /* 0x17 */ ("???", 0, "????"),
    /* 0x18 */ ("CLC", 1, "2"),
    /* 0x19 */ ("ORA oper,Y", 3, "4*"),
    /* 0x1A */ ("???", 0, "????"),
    /* 0x1B */ ("???", 0, "????"),
    /* 0x1C */ ("???", 0, "????"),
    /* 0x1D */ ("ORA oper,X", 3, "4*"),
    /* 0x1E */ ("ASL oper,X", 3, "7"),
    /* 0x1F */ ("???", 0, "????"),
    /* 0x20 */ ("JSR oper", 3, "6"),
    /* 0x21 */ ("AND (oper,X)", 2, "6"),
    /* 0x22 */ ("???", 0, "????"),
    /* 0x23 */ ("???", 0, "????"),
    /* 0x24 */ ("BIT oper", 2, "3"),
    /* 0x25 */ ("AND oper", 2, "3"),
    /* 0x26 */ ("ROL oper", 2, "5"),
    /* 0x27 */ ("???", 0, "????"),
    /* 0x28 */ ("PLP", 1, "4"),
    /* 0x29 */ ("AND #oper", 2, "2"),
    /* 0x2A */ ("ROL A", 1, "2"),
    /* 0x2B */ ("???", 0, "????"),
    /* 0x2C */ ("BIT oper", 3, "4"),
    /* 0x2D */ ("AND oper", 3, "4"),
    /* 0x2E */ ("ROL oper", 3, "6"),
    /* 0x2F */ ("???", 0, "????"),
    /* 0x30 */ ("BMI oper", 2, "2**"),
    /* 0x31 */ ("AND (oper),Y", 2, "5*"),
    /* 0x32 */ ("???", 0, "????"),
    /* 0x33 */ ("???", 0, "????"),
    /* 0x34 */ ("???", 0, "????"),
    /* 0x35 */ ("AND oper,X", 2, "4"),
    /* 0x36 */ ("ROL oper,X", 2, "6"),
    /* 0x37 */ ("???", 0, "????"),
    /* 0x38 */ ("SEC", 1, "2"),
    /* 0x39 */ ("AND oper,Y", 3, "4*"),
    /* 0x3A */ ("???", 0, "????"),
    /* 0x3B */ ("???", 0, "????"),
    /* 0x3C */ ("???", 0, "????"),
    /* 0x3D */ ("AND oper,X", 3, "4*"),
    /* 0x3E */ ("ROL oper,X", 3, "7"),
    /* 0x3F */ ("???", 0, "????"),
    /* 0x40 */ ("RTI", 1, "6"),
    /* 0x41 */ ("EOR (oper,X)", 2, "6"),
    /* 0x42 */ ("???", 0, "????"),
    /* 0x43 */ ("???", 0, "????"),
    /* 0x44 */ ("???", 0, "????"),
    /* 0x45 */ ("EOR oper", 2, "3"),
    /* 0x46 */ ("LSR oper", 2, "5"),
    /* 0x47 */ ("???", 0, "????"),
    /* 0x48 */ ("PHA", 1, "3"),
    /* 0x49 */ ("EOR #oper", 2, "2"),
    /* 0x4A */ ("LSR A", 1, "2"),
    /* 0x4B */ ("???", 0, "????"),
    /* 0x4C */ ("JMP oper", 3, "3"),
    /* 0x4D */ ("EOR oper", 3, "4"),
    /* 0x4E */ ("LSR oper", 3, "6"),
    /* 0x4F */ ("???", 0, "????"),
    /* 0x50 */ ("BVC oper", 2, "2**"),
    /* 0x51 */ ("EOR (oper),Y", 2, "5*"),
    /* 0x52 */ ("???", 0, "????"),
    /* 0x53 */ ("???", 0, "????"),
    /* 0x54 */ ("???", 0, "????"),
    /* 0x55 */ ("EOR oper,X", 2, "4"),
    /* 0x56 */ ("LSR oper,X", 2, "6"),
    /* 0x57 */ ("???", 0, "????"),
    /* 0x58 */ ("CLI", 1, "2"),
    /* 0x59 */ ("EOR oper,Y", 3, "4*"),
    /* 0x5A */ ("???", 0, "????"),
    /* 0x5B */ ("???", 0, "????"),
    /* 0x5C */ ("???", 0, "????"),
    /* 0x5D */ ("EOR oper,X", 3, "4*"),
    /* 0x5E */ ("LSR oper,X", 3, "7"),
    /* 0x5F */ ("???", 0, "????"),
    /* 0x60 */ ("RTS", 1, "6"),
    /* 0x61 */ ("ADC (oper,X)", 2, "6"),
    /* 0x62 */ ("???", 0, "????"),
    /* 0x63 */ ("???", 0, "????"),
    /* 0x64 */ ("???", 0, "????"),
    /* 0x65 */ ("ADC oper", 2, "3"),
    /* 0x66 */ ("ROR oper", 2, "5"),
    /* 0x67 */ ("???", 0, "????"),
    /* 0x68 */ ("PLA", 1, "4"),
    /* 0x69 */ ("ADC #oper", 2, "2"),
    /* 0x6A */ ("ROR A", 1, "2"),
    /* 0x6B */ ("???", 0, "????"),
    /* 0x6C */ ("JMP (oper)", 3, "5"),
    /* 0x6D */ ("ADC oper", 3, "4"),
    /* 0x6E */ ("ROR oper", 3, "6"),
    /* 0x6F */ ("???", 0, "????"),
    /* 0x70 */ ("BVS oper", 2, "2**"),
    /* 0x71 */ ("ADC (oper),Y", 2, "5*"),
    /* 0x72 */ ("???", 0, "????"),
    /* 0x73 */ ("???", 0, "????"),
    /* 0x74 */ ("???", 0, "????"),
    /* 0x75 */ ("ADC oper,X", 2, "4"),
    /* 0x76 */ ("ROR oper,X", 2, "6"),
    /* 0x77 */ ("???", 0, "????"),
    /* 0x78 */ ("SEI", 1, "2"),
    /* 0x79 */ ("ADC oper,Y", 3, "4*"),
    /* 0x7A */ ("???", 0, "????"),
    /* 0x7B */ ("???", 0, "????"),
    /* 0x7C */ ("???", 0, "????"),
    /* 0x7D */ ("ADC oper,X", 3, "4*"),
    /* 0x7E */ ("ROR oper,X", 3, "7"),
    /* 0x7F */ ("???", 0, "????"),
    /* 0x80 */ ("???", 0, "????"),
    /* 0x81 */ ("STA (oper,X)", 2, "6"),
    /* 0x82 */ ("???", 0, "????"),
    /* 0x83 */ ("???", 0, "????"),
    /* 0x84 */ ("STY oper", 2, "3"),
    /* 0x85 */ ("STA oper", 2, "3"),
    /* 0x86 */ ("STX oper", 2, "3"),
    /* 0x87 */ ("???", 0, "????"),
    /* 0x88 */ ("DEY", 1, "2"),
    /* 0x89 */ ("???", 0, "????"),
    /* 0x8A */ ("TXA", 1, "2"),
    /* 0x8B */ ("???", 0, "????"),
    /* 0x8C */ ("STY oper", 3, "4"),
    /* 0x8D */ ("STA oper", 3, "4"),
    /* 0x8E */ ("STX oper", 3, "4"),
    /* 0x8F */ ("???", 0, "????"),
    /* 0x90 */ ("BCC oper", 2, "2**"),
    /* 0x91 */ ("STA (oper),Y", 2, "6"),
    /* 0x92 */ ("???", 0, "????"),
    /* 0x93 */ ("???", 0, "????"),
    /* 0x94 */ ("STY oper,X", 2, "4"),
    /* 0x95 */ ("STA oper,X", 2, "4"),
    /* 0x96 */ ("STX oper,Y", 2, "4"),
    /* 0x97 */ ("???", 0, "????"),
    /* 0x98 */ ("TYA", 1, "2"),
    /* 0x99 */ ("STA oper,Y", 3, "5"),
    /* 0x9A */ ("TXS", 1, "2"),
    /* 0x9B */ ("???", 0, "????"),
    /* 0x9C */ ("???", 0, "????"),
    /* 0x9D */ ("STA oper,X", 3, "5"),
    /* 0x9E */ ("???", 0, "????"),
    /* 0x9F */ ("???", 0, "????"),
    /* 0xA0 */ ("LDY #oper", 2, "2"),
    /* 0xA1 */ ("LDA (oper,X)", 2, "6"),
    /* 0xA2 */ ("LDX #oper", 2, "2"),
    /* 0xA3 */ ("???", 0, "????"),
    /* 0xA4 */ ("LDY oper", 2, "3"),
    /* 0xA5 */ ("LDA oper", 2, "3"),
    /* 0xA6 */ ("LDX oper", 2, "3"),
    /* 0xA7 */ ("???", 0, "????"),
    /* 0xA8 */ ("TAY", 1, "2"),
    /* 0xA9 */ ("LDA #oper", 2, "2"),
    /* 0xAA */ ("TAX", 1, "2"),
    /* 0xAB */ ("???", 0, "????"),
    /* 0xAC */ ("LDY oper", 3, "4"),
    /* 0xAD */ ("LDA oper", 3, "4"),
    /* 0xAE */ ("LDX oper", 3, "4"),
    /* 0xAF */ ("???", 0, "????"),
    /* 0xB0 */ ("BCS oper", 2, "2**"),
    /* 0xB1 */ ("LDA (oper),Y", 2, "5*"),
    /* 0xB2 */ ("???", 0, "????"),
    /* 0xB3 */ ("???", 0, "????"),
    /* 0xB4 */ ("LDY oper,X", 2, "4"),
    /* 0xB5 */ ("LDA oper,X", 2, "4"),
    /* 0xB6 */ ("LDX oper,Y", 2, "4"),
    /* 0xB7 */ ("???", 0, "????"),
    /* 0xB8 */ ("CLV", 1, "2"),
    /* 0xB9 */ ("LDA oper,Y", 3, "4*"),
    /* 0xBA */ ("TSX", 1, "2"),
    /* 0xBB */ ("???", 0, "????"),
    /* 0xBC */ ("LDY oper,X", 3, "4*"),
    /* 0xBD */ ("LDA oper,X", 3, "4*"),
    /* 0xBE */ ("LDX oper,Y", 3, "4*"),
    /* 0xBF */ ("???", 0, "????"),
    /* 0xC0 */ ("CPY #oper", 2, "2"),
    /* 0xC1 */ ("CMP (oper,X)", 2, "6"),
    /* 0xC2 */ ("???", 0, "????"),
    /* 0xC3 */ ("???", 0, "????"),
    /* 0xC4 */ ("CPY oper", 2, "3"),
    /* 0xC5 */ ("CMP oper", 2, "3"),
    /* 0xC6 */ ("DEC oper", 2, "5"),
    /* 0xC7 */ ("???", 0, "????"),
    /* 0xC8 */ ("INY", 1, "2"),
    /* 0xC9 */ ("CMP #oper", 2, "2"),
    /* 0xCA */ ("DEX", 1, "2"),
    /* 0xCB */ ("???", 0, "????"),
    /* 0xCC */ ("CPY oper", 3, "4"),
    /* 0xCD */ ("CMP oper", 3, "4"),
    /* 0xCE */ ("DEC oper", 3, "6"),
    /* 0xCF */ ("???", 0, "????"),
    /* 0xD0 */ ("BNE oper", 2, "2**"),
    /* 0xD1 */ ("CMP (oper),Y", 2, "5*"),
    /* 0xD2 */ ("???", 0, "????"),
    /* 0xD3 */ ("???", 0, "????"),
    /* 0xD4 */ ("???", 0, "????"),
    /* 0xD5 */ ("CMP oper,X", 2, "4"),
    /* 0xD6 */ ("DEC oper,X", 2, "6"),
    /* 0xD7 */ ("???", 0, "????"),
    /* 0xD8 */ ("CLD", 1, "2"),
    /* 0xD9 */ ("CMP oper,Y", 3, "4*"),
    /* 0xDA */ ("???", 0, "????"),
    /* 0xDB */ ("???", 0, "????"),
    /* 0xDC */ ("???", 0, "????"),
    /* 0xDD */ ("CMP oper,X", 3, "4*"),
    /* 0xDE */ ("DEC oper,X", 3, "7"),
    /* 0xDF */ ("???", 0, "????"),
    /* 0xE0 */ ("CPX #oper", 2, "2"),
    /* 0xE1 */ ("SBC (oper,X)", 2, "6"),
    /* 0xE2 */ ("???", 0, "????"),
    /* 0xE3 */ ("???", 0, "????"),
    /* 0xE4 */ ("CPX oper", 2, "3"),
    /* 0xE5 */ ("SBC oper", 2, "3"),
    /* 0xE6 */ ("INC oper", 2, "5"),
    /* 0xE7 */ ("???", 0, "????"),
    /* 0xE8 */ ("INX", 1, "2"),
    /* 0xE9 */ ("SBC #oper", 2, "2"),
    /* 0xEA */ ("NOP", 1, "2"),
    /* 0xEB */ ("???", 0, "????"),
    /* 0xEC */ ("CPX oper", 3, "4"),
    /* 0xED */ ("SBC oper", 3, "4"),
    /* 0xEE */ ("INC oper", 3, "6"),
    /* 0xEF */ ("???", 0, "????"),
    /* 0xF0 */ ("BEQ oper", 2, "2**"),
    /* 0xF1 */ ("SBC (oper),Y", 2, "5*"),
    /* 0xF2 */ ("???", 0, "????"),
    /* 0xF3 */ ("???", 0, "????"),
    /* 0xF4 */ ("???", 0, "????"),
    /* 0xF5 */ ("SBC oper,X", 2, "4"),
    /* 0xF6 */ ("INC oper,X", 2, "6"),
    /* 0xF7 */ ("???", 0, "????"),
    /* 0xF8 */ ("SED", 1, "2"),
    /* 0xF9 */ ("SBC oper,Y", 3, "4*"),
    /* 0xFA */ ("???", 0, "????"),
    /* 0xFB */ ("???", 0, "????"),
    /* 0xFC */ ("???", 0, "????"),
    /* 0xFD */ ("SBC oper,X", 3, "4*"),
    /* 0xFE */ ("INC oper,X", 3, "7"),
    /* 0xFF */ ("???", 0, "????"),
];
